AMCAT
K Closest Points to Origin ⭐ [Intern]
Zombie in Matrix aka Min hours to send file to all available servers ⭐⭐ [Experienced]
Find Pair With Given Sum ⭐⭐ [Experienced, Intern] (MoviesInFlight)
Copy List with Random Pointer ⭐⭐ [New Grad]
Top N Competitors/Buzzwords ⭐⭐ [Experienced]
Reorder Data in Log Files ⭐⭐⭐ [Experienced]
Subtree of Another Tree ⭐⭐ [New Grad]
Product Suggestions ⭐⭐ [New Grad | Experienced]
Treasure Island / Min Distance to Remove the Obstacle (BFS) ⭐⭐⭐ [Experienced]
Number of Clusters ⭐⭐ [Experienced]
Spiral Matrix ⭐ [New Grad]
Prison Cells After N Days
Subtree with Maximum Average

Critical Routers ⭐⭐ [New Grad | Experienced]
Optimal Utilization ⭐⭐⭐ [Experienced]
Min Cost to Connect Ropes / Min Time to Merge Files ⭐⭐⭐[Experienced]
Treasure Island II
Merge Two Sorted Lists ⭐⭐ [New Grad | Intern]
Search a 2D Matrix II ⭐⭐ [New Grad]
Critical Connections ⭐ [New Grad]
Favorite Genres ⭐⭐ [New Grad]
Two Sum - Unique Pairs ⭐⭐ [New Grad]
Count substrings with exactly K distinct chars ⭐ [Intern]
Max Of Min Altitudes ⭐⭐ [Intern]
Longest Palindromic Substring ⭐⭐ [Intern]
Substrings of size K with K distinct chars ⭐⭐ [Intern]
Most Common Word ⭐⭐ [Intern]
Generate Parentheses ⭐ [Intern]
Min Cost to Connect All Nodes (a.k.a. Min Cost to Add New Roads)
Min Cost to Repair Edges (MST)
Partition Labels


AMCAT Interface

Codility
Point of Lattice ⭐ [Experienced]
Merge Intervals ⭐
Roll Dice ⭐
Longest string without 3 consecutive characters
Longest string made up of only vowels

Mettl
https://leetcode.com/problems/number-of-dice-rolls-with-target-sum/ [Intern]
Nth GP [Intern]


Top N Competitors/Buzzwords ⭐⭐ [Experienced]
----------------------------------------------
You work on a team whose job is to understand the most sought after toys for the holiday season.A teammate of yours has built a webcrawler that extracts a list of quotes about toys from different articles.You need to take these quotes and identify which toys are mentioned most frequently.Write an algorithm that identifies the top N toys out of a list of quotes and list of toys.

Your algorithm should output the top N toys mentioned most frequently in the quotes.

Input:
The input to the function / method consists of five arguments:

numToys, an integer representing the number of toys
topToys, an integer representing the number of top toys your algorithm needs to return;
toys, a list of strings representing the toys,
numQuotes, an integer representing the number of quotes about toys;
quotes, a list of strings that consists of space-sperated words representing articles about toys

Output:
Return a list of strings of the most popular N toys in order of most to least frequently mentioned

Note:
The comparison of strings is case-insensitive.If the value of topToys is more than the number of toys, return the names of only the toys mentioned in the quotes. If toys are mentioned an equal number of times in quotes, sort alphabetically.

Example 1:

Input:
numToys = 6
topToys = 2
toys = ["elmo", "elsa", "legos", "drone", "tablet", "warcraft"]
numQuotes = 6
quotes = [
"Elmo is the hottest of the season! Elmo will be on every kid's wishlist!",
"The new Elmo dolls are super high quality",
"Expect the Elsa dolls to be very popular this year, Elsa!",
"Elsa and Elmo are the toys I'll be buying for my kids, Elsa is good",
"For parents of older kids, look into buying them a drone",
"Warcraft is slowly rising in popularity ahead of the holiday season"
];

Output:
["elmo", "elsa"]

Explanation:
elmo - 4
elsa - 4
"elmo" should be placed before "elsa" in the result because "elmo" appears in 3 different quotes and "elsa" appears in 2 different quotes.


["l5sh 6 3869 08 1295", "16o 94884717383724 9", "43 490972281212 3 51", "9 ehyjki ngcoobi mi", "2epy 85881033085988", "7z fqkbxxqfks f y dg", "9h4p 5 791738 954209", "p i hz uubk id s m l",
"wd lfqgmu pvklkdp u", "m4jl 225084707500464", "6np2 bqrrqt q vtap h", "e mpgfn bfkylg zewmg", "ttzoz 035658365825 9", "k5pkn 88312912782538", "ry9 8231674347096 00", "w 831 74626 07 353 9",
"bxao armngjllmvqwn q", "0uoj 9 8896814034171", "0 81650258784962331", "t3df gjjn nxbrryos b"]


["bxao armngjllmvqwn q","6np2 bqrrqt q vtap h","9 ehyjki ngcoobi mi","7z fqkbxxqfks f y dg","t3df gjjn nxbrryos b","p i hz uubk id s m l","wd lfqgmu pvklkdp u","e mpgfn bfkylg zewmg","0uoj 9 8896814034171","w 831 74626 07 353 9","ry9 8231674347096 00","k5pkn 88312912782538","m4jl 225084707500464","0 81650258784962331","9h4p 5 791738 954209","2epy 85881033085988","43 490972281212 3 51","16o 94884717383724 9","ttzoz 035658365825 9","l5sh 6 3869 08 1295"]

Expected
["bxao armngjllmvqwn q","6np2 bqrrqt q vtap h","9 ehyjki ngcoobi mi","7z fqkbxxqfks f y dg","t3df gjjn nxbrryos b","p i hz uubk id s m l","wd lfqgmu pvklkdp u","e mpgfn bfkylg zewmg",
"l5sh 6 3869 08 1295","16o 94884717383724 9","43 490972281212 3 51","2epy 85881033085988","9h4p 5 791738 954209","m4jl 225084707500464","ttzoz 035658365825 9","k5pkn 88312912782538",
"ry9 8231674347096 00","w 831 74626 07 353 9","0uoj 9 8896814034171","0 81650258784962331"]


bxao armngjllmvqwn q","6np2 bqrrqt q vtap h","9 ehyjki ngcoobi mi","7z fqkbxxqfks f y dg","t3df gjjn nxbrryos b","p i hz uubk id s m l","wd lfqgmu pvklkdp u","l5sh 6 3869 08 1295","16o 94884717383724 9","43 490972281212 3 51","2epy 85881033085988","9h4p 5 791738 954209","m4jl 225084707500464","ttzoz 035658365825 9","k5pkn 88312912782538","ry9 8231674347096 00","w 831 74626 07 353 9","0uoj 9 8896814034171","0 81650258784962331",

["bxao armngjllmvqwn q","6np2 bqrrqt q vtap h","9 ehyjki ngcoobi mi","7z fqkbxxqfks f y dg","t3df gjjn nxbrryos b","p i hz uubk id s m l","wd lfqgmu pvklkdp u",
"l5sh 6 3869 08 1295","16o 94884717383724 9","43 490972281212 3 51","2epy 85881033085988","9h4p 5 791738 954209","m4jl 225084707500464","ttzoz 035658365825 9","k5pkn 88312912782538",
"ry9 8231674347096 00","w 831 74626 07 353 9","0uoj 9 8896814034171","0 81650258784962331",